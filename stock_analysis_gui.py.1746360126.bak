#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
股票分析系统GUI模块
提供图形用户界面
"""

import os
import sys
import time
import json
import logging
import traceback
from typing import Dict, List, Any, Optional
from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QWidget, QVBoxLayout, QHBoxLayout,
    QPushButton, QLabel, QTabWidget, QTableWidget, QTableWidgetItem,
    QHeaderView, QSplitter, QTextEdit, QFrame, QProgressBar, QMessageBox,
    QScrollArea, QGroupBox, QComboBox
)
from PyQt5.QtCore import Qt, QTimer, QThread, pyqtSignal
from PyQt5.QtGui import QFont, QColor, QPixmap, QIcon

# 设置日志
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    filename='gui.log',
    filemode='a'
)
logger = logging.getLogger('StockGUI')

class MainWindow(QMainWindow):
    """主窗口"""
    
    def __init__(self, sector_integrator=None):
        super().__init__()
        self.setWindowTitle('股票分析系统')
        self.setGeometry(100, 100, 1200, 800)
        self.init_ui()
    
    def init_ui(self):
        """初始化UI"""
        # 创建中央部件
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        # 创建主布局
        main_layout = QVBoxLayout(central_widget)
        
        # 创建标题
        title_label = QLabel('股票分析系统')
        title_label.setFont(QFont('Arial', 16, QFont.Bold))
        title_label.setAlignment(Qt.AlignCenter)
        main_layout.addWidget(title_label)
        
        # 创建选项卡部件
        self.tabs = QTabWidget()
        
        # 添加市场概览选项卡
        self.tabs.addTab(QWidget(), '市场概览')
        
        # 添加个股分析选项卡
        self.tabs.addTab(QWidget(), '个股分析')
        
        # 添加量化策略选项卡
        self.tabs.addTab(QWidget(), '量化策略')
        
        # 添加智能推荐选项卡
        self.tabs.addTab(QWidget(), '智能推荐')
        
        # 删除热门行业选项卡
        
        main_layout.addWidget(self.tabs)
        
        # 设置状态栏
        self.statusBar().showMessage('就绪')

def launch_gui(sector_integrator=None):
    """启动GUI
    
    Args:
        sector_integrator: 行业分析器集成实例(可选)
    """
    app = QApplication(sys.argv)
    
    # 设置应用字体
    font = QFont()
    font.setFamily('Arial')
    font.setPointSize(10)
    app.setFont(font)
    
    # 创建并显示主窗口
    main_window = MainWindow(sector_integrator=None)
    main_window.show()
    
    # 启动应用程序事件循环
    sys.exit(app.exec_())

if __name__ == "__main__":
    # 如果直接运行此文件，尝试创建行业分析器集成器
    try:
        from integrate_sector_analyzer import SectorAnalyzerIntegrator
        integrator = SectorAnalyzerIntegrator()
        launch_gui(integrator)
    except ImportError:
        # 如果无法导入，则启动没有集成器的GUI
        launch_gui(None)
    except Exception as e:
        logger.error(f"创建集成器失败: {e}")
        launch_gui(None) 